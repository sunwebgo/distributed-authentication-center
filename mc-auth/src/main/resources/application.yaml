server:
  port: 10002

# 数据源配置
spring:
  application:
    name: mc-auth
  redis:
    port: 6379
    host:
    password:
    database: 0
    timeout: 10000

# 滑块验证码配置， 详细请看 cloud.tianai.captcha.autoconfiguration.ImageCaptchaProperties 类
captcha:
  # 如果项目中使用到了redis，滑块验证码会自动把验证码数据存到redis中， 这里配置redis的key的前缀,默认是captcha:slider
  prefix: captcha
  # 验证码过期时间，默认是2分钟,单位毫秒， 可以根据自身业务进行调整
  expire:
    # 默认缓存时间 2分钟
    default: 10000
    # 针对 点选验证码 过期时间设置为 2分钟， 因为点选验证码验证比较慢，把过期时间调整大一些
    WORD_IMAGE_CLICK: 20000
  # 使用加载系统自带的资源， 默认是 false
  init-default-resource: false
  cache:
    # 缓存控制， 默认为false不开启
    enabled: true
    # 验证码会提前缓存一些生成好的验证数据， 默认是20
    cacheSize: 20
    # 缓存拉取失败后等待时间 默认是 5秒钟
    wait-time: 5000
    # 缓存检查间隔 默认是2秒钟
    period: 2000
  secondary:
    # 二次验证， 默认false 不开启
    enabled: false
    # 二次验证过期时间， 默认 2分钟
    expire: 120000
    # 二次验证缓存key前缀，默认是 captcha:secondary
    keyPrefix: "captcha:secondary"

# oauth信息
security:
  oauth2:
    client:
      client-id: music-community #客户端id
      client-secret: xu.123456 #客户端密码
      grant-type: #授权类型
        - password
        - refresh_token
      access-token-validity-seconds: 120 #token有效时间
      refresh-token-validity-seconds: 600 #刷新token有效时间
      scope: #授权范围
        - all

# dubbo配置
dubbo:
  application:
    name: mc-auth
    logger: slf4j
    metadataType: remote # 元数据中心:local本地,remote远程,这里使用远程便于其他服务获取,注意 这里不能使用本地local会读取不到元数据
  registry:
    address:
    parameters:
      username: nacos
      password: nacos
    check: false
  metadata-report: # 元数据:用于服务提供者向注册中心发布服务元数据,有助于服务消费者了解服务提供者的详细信息，从而做出更加合理的服务调用决策。
    address:
    parameters:
      username: nacos
      password: nacos
  protocol: #dubbo协议信息
    name: dubbo # 使用 dubbo 协议通信
    port: -1 # dubbo 协议端口(-1表示自增端口,从20880开始)
    serialization: hessian2 # 序列化方式
  provider:
    version: 1.0.0
  consumer:
    check: false # 禁止消费者启动时检查提供者是否可用
    version: 1.0.0

# 线程池配置
thread-pool:
  core-size: 20 #核心线程数
  max-size: 200 #最大线程数
  keep-alive-time: 10 #线程存活时间
